/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;

import Modele.Dao.ClientDao;
import Modele.Dao.ObjetDao;
import Modele.Dao.PretDao;
import Modele.modele.Objet;
import Modele.modele.Pret;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;

/**
 *
 * @author djoum
 */
public class RestitutionVue extends javax.swing.JDialog {

    /**
     * Creates new form RestitutionVue
     */
    ArrayList<Pret> listPret=new ArrayList<Pret>();
    
    public RestitutionVue(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        listPret=new PretDao().getListPret2();
//        this.setListPret();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        restituer = new javax.swing.JButton();
        quitter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 255));
        jLabel1.setText("RESTITUTION DES PRETS");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(new PretDao().getListPret(),new String [] {"Identifiant","Nom du client","Objet","Date du pret","Delai","Quantit√©"

        }
    ));
    jScrollPane1.setViewportView(jTable1);

    restituer.setText("Restituer");
    restituer.addActionListener(new ControleRestitution());

    quitter.setText("Terminer");
    quitter.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            quitterActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1)
        .addGroup(layout.createSequentialGroup()
            .addGap(224, 224, 224)
            .addComponent(jLabel1)
            .addContainerGap(267, Short.MAX_VALUE))
        .addGroup(layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(restituer)
            .addGap(55, 55, 55)
            .addComponent(quitter)
            .addGap(76, 76, 76))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(28, 28, 28)
            .addComponent(jLabel1)
            .addGap(26, 26, 26)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(restituer)
                .addComponent(quitter))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterActionPerformed
      
        

        
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_quitterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestitutionVue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestitutionVue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestitutionVue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestitutionVue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                RestitutionVue dialog = new RestitutionVue(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private class ControleRestitution implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            
            String[] title={"Identifiant","Nom du client","Objet","Date du pret","Delai","Quantite"}; 
            int qte;
            String cliobj,datepret,dateres;
            Pret pret=new Pret();
            int[] lesLignes= jTable1.getSelectedRows();
            
            if(lesLignes.length==0){
                
                JOptionPane.showMessageDialog(null, "vous devez selection une ou plusieurs lignes ") ;
           System.out.println("erreur !!!") ;
           
            }else{
                
            for(int i=0;i<lesLignes.length;i++){
               
                cliobj=jTable1.getValueAt(lesLignes[i], 0).toString().trim();
                datepret=jTable1.getValueAt(lesLignes[i], 3).toString().trim()+" ";
                dateres=jTable1.getValueAt(lesLignes[i], 4).toString().trim()+" ";
                qte=Integer.parseInt(jTable1.getValueAt(lesLignes[i],5).toString().trim());
                
                
                pret.setClient(new ClientDao().getClientById(Integer.parseInt(cliobj.substring(0,1))));
                pret.setObjet(new ObjetDao().getObjetById(Integer.parseInt(cliobj.substring(2,3))));
                pret.setStatus("non restituer");
                pret.setQuantite(qte);
                pret.setDate_pretByDate(formatStringToDate(datepret));
                pret.setDate_resByDate(formatStringToDate(dateres));
                pret.setDate_pretByString(pret.getDate_pret().substring(0, 10));
                pret.setDate_resByString(pret.getDate_res().substring(0, 10));
                
                for(Pret pr:listPret){
                  
                    String dat1=pr.getDate_pret();
                    String dat2=pr.getDate_res();
                    pr.setDate_pretByString(pr.getDate_pret().substring(0, 10));
                    pr.setDate_resByString(pr.getDate_res().substring(0, 10));
            
                    
                    if(pr.equals(pret)) {
                    
                         pr.setDate_pretByString(dat1);
                         pr.setDate_resByString(dat2);
                        new PretDao().changeStatus(pr);
//                        listPret.remove(i);
                    
                    }else{
                    
                    pr.setDate_pretByString(dat1);
                    pr.setDate_resByString(dat2);
//                    System.out.println(pr);
                    
                    }
                    
                }
                
                jTable1.setModel(new javax.swing.table.DefaultTableModel(new PretDao().getListPret(),title));
               
//                System.out.println(pret);
                
                
            }
            
            
            
            
           }
        }
        
    }
    
    private Date formatStringToDate(String date){
        
       String[] jma= new String[3];
        int t=0,k=0;
        for(int i=0;i<date.length();i++){
            
            if(date.charAt(i)==' '){
                jma[t]=date.substring(k, i);
                k=i+1;
                t++;
            }
            
        }
        switch (jma[1]){
            case "janvier":t=1;break;
            case "fevrier":t=2;break;
            case "mars" : t=3;break;
            case "avril" : t=4;break;
            case "mai" : t=5;break;
            case "juin": t=6;break;
            case "juillet" : t=7; break;
            case "aout" :t=8; break;
            case "septembre": t=9;break;  
            case "octobre" : t=10;break;
            case "novembre" : t=11;break;    
            default:t=12 ;
        }
        GregorianCalendar cal= new GregorianCalendar();
        cal.set(Integer.parseInt(jma[2]), t-1, Integer.parseInt(jma[0]));
        return cal.getTime();
    }
    
    private void setListPret(){
        
        for(Pret p:listPret){
            
            p.setDate_pretByString(p.getDate_pret().substring(0, 10));
            p.setDate_resByString(p.getDate_res().substring(0, 10));
            
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton quitter;
    private javax.swing.JButton restituer;
    // End of variables declaration//GEN-END:variables
}
