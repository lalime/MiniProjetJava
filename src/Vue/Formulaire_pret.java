/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;

import Modele.Dao.ClientDao;
import Modele.Dao.ObjetDao;
import Modele.Dao.PretDao;
import Modele.modele.Client;
import Modele.modele.Objet;
import Modele.modele.Pret;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus
 */
public class Formulaire_pret extends javax.swing.JFrame {

    /**
     * Creates new form Formulaire_pret
     */
    
    ClientDao clidao=new ClientDao();
    ObjetDao obdao=new ObjetDao();
    PretDao prdoa=new PretDao();
    ArrayList<Pret> listPret= new ArrayList<>();
    
    public Formulaire_pret() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idclientLbl = new javax.swing.JLabel();
        idobjetLbl = new javax.swing.JLabel();
        daterestiLbl = new javax.swing.JLabel();
        quantiteLbl = new javax.swing.JLabel();
        idclientCbx = new javax.swing.JComboBox();
        quantite = new javax.swing.JTextField();
        valider = new javax.swing.JButton();
        annuler = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jRes = new javax.swing.JComboBox();
        mRes = new javax.swing.JComboBox();
        aRes = new javax.swing.JComboBox();
        idobjet = new javax.swing.JComboBox();
        annuler1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestion des prÃªts");

        idclientLbl.setFont(new java.awt.Font("Verdana", 3, 11)); // NOI18N
        idclientLbl.setText("Nom Client");

        idobjetLbl.setFont(new java.awt.Font("Verdana", 3, 11)); // NOI18N
        idobjetLbl.setText("Nom Objet");

        daterestiLbl.setFont(new java.awt.Font("Verdana", 3, 11)); // NOI18N
        daterestiLbl.setText("Date restitution");

        quantiteLbl.setFont(new java.awt.Font("Verdana", 3, 11)); // NOI18N
        quantiteLbl.setText("Quantite");

        idclientCbx.setModel(new javax.swing.DefaultComboBoxModel(new ClientDao().getClientName()));
        idclientCbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                idclientCbxItemStateChanged(evt);
            }
        });

        quantite.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        valider.setFont(new java.awt.Font("Verdana", 3, 11)); // NOI18N
        valider.addActionListener(new ControleEnregistrePret());
        valider.setText("Valider");
        valider.setBorder(new javax.swing.border.MatteBorder(null));
        valider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        annuler.setFont(new java.awt.Font("Verdana", 3, 11)); // NOI18N
        annuler.setText("Annuler");
        annuler.setBorder(new javax.swing.border.MatteBorder(null));
        annuler.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nom Client", "Nom objet", "Date restituion", "Quantite"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jRes.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"1", "2", "3", "4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31" }));

        mRes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04","05","06","07","08","09","10","11","12" }));

        aRes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2013", "2014", "2015", "2016","2017","2018","2019","2020" }));

        idobjet.setModel(new javax.swing.DefaultComboBoxModel(new ObjetDao().getObjetName()));

        annuler1.setFont(new java.awt.Font("Verdana", 3, 11)); // NOI18N
        annuler1.setText("Terminer");
        annuler1.setBorder(new javax.swing.border.MatteBorder(null));
        annuler1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        annuler1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annuler1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(idclientLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idclientCbx, 0, 195, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idobjetLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idobjet, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(quantiteLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantite, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(daterestiLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRes, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mRes, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(valider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(annuler, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(annuler1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(aRes, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(110, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idclientLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idclientCbx, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idobjetLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idobjet, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(daterestiLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mRes, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(aRes, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantiteLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantite, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(annuler, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valider, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(annuler1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idclientCbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_idclientCbxItemStateChanged

        if(idclientCbx.getSelectedItem().toString().equals("nouveau client")){
        CreateClients.getInstance();
        System.out.println("euh!!");
        }else{
            CreateClients.teste=false;
        }
        // TODO add your ha<;ndling code here:
    }//GEN-LAST:event_idclientCbxItemStateChanged

    private void annuler1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annuler1ActionPerformed

        for(Pret pre:listPret){
            
            prdoa.create(pre);
            
        }
//        MainView.setActionJtable(1);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_annuler1ActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained

        idclientCbx.setModel(new javax.swing.DefaultComboBoxModel(new ClientDao().getClientName()));
         System.out.println("focus gagnÃ©");
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus

        idclientCbx.setModel(new javax.swing.DefaultComboBoxModel(new ClientDao().getClientName()));
         System.out.println("focus gagnÃ©");
        
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulaire_pret.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulaire_pret.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulaire_pret.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulaire_pret.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Formulaire_pret().setVisible(true);
            }
        });
    }
  
    private class ControleEnregistrePret implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            
             String[] title={"Nom du client","Objet","Date de restitution","quantite"};
             Object[][] data=null;
            String idcli=idclientCbx.getSelectedItem().toString();
            String idobj= idobjet.getSelectedItem().toString();
            int ares=Integer.parseInt(aRes.getSelectedItem().toString());
            int jres=Integer.parseInt(jRes.getSelectedItem().toString());
            int mres=Integer.parseInt(mRes.getSelectedItem().toString());
            int id_client=0,id_objet=0,k=0,qte=0, test=0;
            
            boolean dateResTrue=true;
            
            
            
            try{
                qte=Integer.parseInt(quantite.getText().trim());
            }catch(NumberFormatException ex){
                
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "la quantite doit etre un entier ") ;
                test=1;
            }
            
            for(int i=0;i<idcli.length();i++){
                
                if(idcli.charAt(i)=='-'){
                  id_client=Integer.parseInt(idcli.substring(k, i));  
                  id_objet=Integer.parseInt(idobj.substring(k, i));
                  break;
                }
            }
            
            
            Client client=clidao.getClientById(id_client);
            Objet objet=obdao.getObjetById(id_objet);
            GregorianCalendar cal= new GregorianCalendar();
            cal.set(ares, mres-1, jres);
            
            if(new Date().compareTo(cal.getTime())!=-1){
                dateResTrue=false;
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "la date restitution doit etre superieur ou egale Ã  la date actuelle !!!") ;
            }
            
            Pret pret=new Pret();
            pret.setClient(client);
            pret.setObjet(objet);
            pret.setDate_pretByDate(new Date());
            pret.setDate_resByDate(cal.getTime());
            pret.setStatus("non restituer");
            pret.setQuantite(qte);
            
            int test2=0;
            if(pret.getObjet().getQte()<qte){
                
                test2=1;
                JOptionPane.showMessageDialog(null, "cet Objet ne reste plus que "+pret.getObjet().getQte()) ;
            }
            
            if((test==0)&&(test2==0)&&(dateResTrue)){
                
            listPret.add(pret);
            data= new Object[listPret.size()][4];
            
            int i=0;
               for(Pret pr:listPret){
                
                   data[i][0]=pr.getClient().getNom();
                   data[i][1]=pr.getObjet().getDescription();
                   data[i][2]=pr.getDate_res();
                   data[i][3]=pr.getQuantite();
                   i++;
                   
               }
            jTable1.setModel(new javax.swing.table.DefaultTableModel(data,title));
            
            System.out.println(pret.getClient().getId_client()+" "+pret.getObjet().getId_objet()+" "+pret.getDate_pret()+" "+pret.getDate_res()+" "+pret.getQuantite()+" "+pret.getStatus());
           }
            }
            
        
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox aRes;
    private javax.swing.JButton annuler;
    private javax.swing.JButton annuler1;
    private javax.swing.JLabel daterestiLbl;
    private javax.swing.JComboBox idclientCbx;
    private javax.swing.JLabel idclientLbl;
    private javax.swing.JComboBox idobjet;
    private javax.swing.JLabel idobjetLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox jRes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox mRes;
    private javax.swing.JTextField quantite;
    private javax.swing.JLabel quantiteLbl;
    private javax.swing.JButton valider;
    // End of variables declaration//GEN-END:variables
}
